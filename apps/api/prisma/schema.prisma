// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  username      String        @unique
  email         String        @unique
  password      String
  referalnumber String @default("")
  referalcode   String @default("")
  point         Int   @default(0)
  avatar        String?
  phonenumber   String? @db.VarChar(15)
  isVerify      Boolean @default(false)
  createdAd     DateTime @default(now())
  Transaction   Transaction[]
  Review        Review[]
}

enum statusTransaction {
  pending
  waitingtocomfirm
  paid
  declined
}

model Transaction {
  id            Int               @id @default(autoincrement())
  quantitiy     Int
  createdAd     DateTime          @default(now())
  totalprice    Int
  totaldiscount Int
  finalprice    Int
  status        statusTransaction
  proofpayment  String
  userId        Int               @unique
  eventId       Int               @unique
  user          User              @relation(fields: [userId], references: [id])
  event         Event             @relation(fields: [eventId], references: [id])
}

model Review {
  id      Int    @id @default(autoincrement())
  review  String
  rating  Int    @default(0)
  userId  Int   @unique
  eventId Int   @unique
  user    User   @relation(fields: [userId], references: [id])
  event   Event  @relation(fields: [eventId], references: [id])
}

enum tickettype {
  free
  paid
}

enum category {
  game
  music
  film
}

model Event {
  id               Int            @id @default(autoincrement())
  name             String
  description      String
  price            Int
  date             DateTime
  location         String
  seat             Int
  tickettype       tickettype
  image            String
  eventorganizer   EventOrganizer @relation(fields: [eventOrganizerId], references: [id])
  eventOrganizerId Int            @unique
  category         category
  Promotion        Promotion?
  Transaction      Transaction?
  Review           Review?
}

model Promotion {
  id         Int      @id @default(autoincrement())
  startdate  DateTime
  enddate    DateTime
  quota      Int
  percentage Int
  event      Event    @relation(fields: [eventId], references: [id])
  eventId    Int      @unique
}

model EventOrganizer {
  id       Int     @id @default(autoincrement())
  usernameCreator String  @unique
  email    String  @unique
  password String
  avatar   String?
  phonenumber String? @db.VarChar(15)
  isVerify Boolean  @default(false)
  createdAd DateTime @default(now())
  Event    Event?
}

// model Sample {
//   id        Int      @id @default(autoincrement())
//   name      String
//   code      String   @unique
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("samples") // if you want to use snake_case format
// }
